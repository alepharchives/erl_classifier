Naive Bayes classifier in Erlang

The classifier can be used to solve any-of classifications using the approach of 
N two-class classifiers.


Configuring the classifier:
The classifier is configured via the env part of the app term 
in erl_classifier.app. The following items most be setup:

1) Language: {language, language_atom}
   language atoms supported is danish and swedish.

2) Classes: {classes, [class1, ..., classn]}
   List the classes of the classifier corresponding to two-class classifiers 
   the application will contain.

Note: All files are expected to be UTF8 encoded.

Stop word lists:

     - Are kept in priv/stopwords/
     - Must be named lang.stopwords, where lang is the language of the stop words in the file.


Setting up the mnesia datastore:

1) Setting up the schema
   make console
   > mnesia:stop().
   > mnesia:create_schema([node()]).
   > ctrl-g q -- to stop the shell

2) Setting up tables with the sport demo data
   make console
   > ec_store:init_tables().
   > ec_store:stopword_update().
   > ec_sport_demo:train().
   > ec_store:change_to_disc_copies().
 
3) Classifying text (you can run the ec_any_of:classify as many times as you like)
   make console
   > ec_any_of:classify(<<"your text in danish"/utf8>>).




